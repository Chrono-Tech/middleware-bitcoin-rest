
module.exports.id = '2c9dd332.05334c';

const _ = require('lodash'),
  config = require('../config');

/**
 * @description flow 2c9dd332.05334c update
 * @param done
 */
   

module.exports.up = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.update({"path":"2c9dd332.05334c","type":"flows"}, {
    $set: {"path":"2c9dd332.05334c","body":[{"id":"7c68e0a0.c140d","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo","mode":"1","requestType":"2","dbAlias":"primary.accounts","x":810,"y":620,"wires":[["54f1c0e7.3a5a7"]]},{"id":"316484c0.63001c","type":"function","z":"2c9dd332.05334c","name":"transform params","func":"const prefix = global.get('settings.mongo.accountPrefix');\nconst network = global.get('node.network');\n\nmsg.address = msg.payload.address;\nconst addressForms = network.getAllAddressForms(msg.address);\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: [{\n       address: {$in: Object.values(addressForms)}\n   }, {isActive: false}]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":640,"wires":[["7c68e0a0.c140d"]]},{"id":"468de3dc.eb162c","type":"http in","z":"2c9dd332.05334c","name":"balance","url":"/addr/:addr/balance","method":"get","upload":false,"swaggerDoc":"","x":70,"y":920,"wires":[["64c0a502.75037c"]]},{"id":"6731d0f7.68fb4","type":"function","z":"2c9dd332.05334c","name":"transform params","func":"const prefix = global.get('settings.mongo.accountPrefix');\nconst network = global.get('node.network');\n\nconst addressForms = network.getAllAddressForms(msg.req.params.addr);\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: {\n       address: {$in: Object.values(addressForms)}\n   }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":920,"wires":[["a66b89d5.08b868"]]},{"id":"a66b89d5.08b868","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.accounts","x":570,"y":920,"wires":[["36a27ede.06cd52"]]},{"id":"36a27ede.06cd52","type":"function","z":"2c9dd332.05334c","name":"transform output","func":"\nconst _ = global.get('_');\n\nlet account = msg.payload[0];\n\n\nmsg.payload = {\n    confirmations0: {\n      satoshis: _.get(account, 'balances.confirmations0', 0),\n      amount: _.get(account, 'balances.confirmations0', 0) / 100000000\n    },\n    confirmations3: {\n      satoshis: _.get(account, 'balances.confirmations3', 0),\n      amount: _.get(account, 'balances.confirmations3', 0) / 100000000\n    },\n    confirmations6: {\n      satoshis: _.get(account, 'balances.confirmations6', 0),\n      amount: _.get(account, 'balances.confirmations6', 0) / 100000000\n    },\n  };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":920,"wires":[["6e227f25.b210e"]]},{"id":"6e227f25.b210e","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":931.250007629395,"y":919.99999904632,"wires":[]},{"id":"e859d127.685df","type":"catch","z":"2c9dd332.05334c","name":"","scope":null,"x":180,"y":1280,"wires":[["568b5627.690888","8618c9a.7189a38"]]},{"id":"4e47577b.ea57f8","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":1230,"y":1020,"wires":[]},{"id":"375e54b9.33dc5c","type":"http in","z":"2c9dd332.05334c","name":"utxo","url":"/addr/:addr/utxo","method":"get","upload":false,"swaggerDoc":"","x":70,"y":1020,"wires":[["61c7d36e.5e99cc"]]},{"id":"352fd4a8.2620ac","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo create addr","mode":"1","requestType":"1","dbAlias":"primary.accounts","x":1170,"y":120,"wires":[["fd565cdc.5b9e"]]},{"id":"fb8909f1.457008","type":"amqp in","z":"2c9dd332.05334c","name":"post addresses","topic":"${config.rabbit.serviceName}.account.create","iotype":"3","ioname":"events","noack":"0","durablequeue":"1","durableexchange":"0","server":"","servermode":"1","x":120,"y":260,"wires":[["f0edc237.50ca1"]]},{"id":"f0edc237.50ca1","type":"function","z":"2c9dd332.05334c","name":"","func":"\nmsg.payload = JSON.parse(msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":260,"wires":[["56b47c8c.da26b4"]]},{"id":"d430cfb9.80173","type":"amqp out","z":"2c9dd332.05334c","name":"","topic":"${config.rabbit.serviceName}.account.created","iotype":"3","ioname":"events","server":"","servermode":"1","x":1570,"y":200,"wires":[]},{"id":"fd565cdc.5b9e","type":"function","z":"2c9dd332.05334c","name":"","func":"\nif(msg.amqpMessage)\n    msg.amqpMessage.ackMsg();\n\nmsg.payload = JSON.stringify({address: msg.address})\n\nreturn msg;","outputs":1,"noerr":0,"x":1410,"y":160,"wires":[["d430cfb9.80173","98d385f9.3dc368"]]},{"id":"5e8d6a6f.829244","type":"amqp in","z":"2c9dd332.05334c","name":"delete addresses","topic":"${config.rabbit.serviceName}.account.delete","iotype":"3","ioname":"events","noack":"0","durablequeue":"1","durableexchange":"0","server":"","servermode":"1","x":120,"y":720,"wires":[["c1017ee9.20a23"]]},{"id":"c1017ee9.20a23","type":"function","z":"2c9dd332.05334c","name":"","func":"\nmsg.payload = JSON.parse(msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":720,"wires":[["316484c0.63001c"]]},{"id":"c1a99120.e1907","type":"amqp out","z":"2c9dd332.05334c","name":"","topic":"${config.rabbit.serviceName}.account.deleted","iotype":"3","ioname":"events","server":"","servermode":"1","x":1170,"y":620,"wires":[]},{"id":"54f1c0e7.3a5a7","type":"function","z":"2c9dd332.05334c","name":"","func":"\nif(msg.amqpMessage)\n    msg.amqpMessage.ackMsg();\n\nmsg.payload = JSON.stringify({address: msg.address})\n\nreturn msg;","outputs":1,"noerr":0,"x":990,"y":620,"wires":[["c1a99120.e1907"]]},{"id":"b224dbf1.a256c8","type":"function","z":"2c9dd332.05334c","name":"transform","func":"const prefix = global.get('settings.mongo.accountPrefix');\nconst network = global.get('node.network');\n\nconst addressForms = network.getAllAddressForms(msg.address);\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: [\n        {address: {$in: Object.values(addressForms)}}, \n        {$set:{ \n            address: msg.address,\n            isActive: true\n        }}\n        ]\n   \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":200,"wires":[["21088134.04adae"]]},{"id":"21088134.04adae","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo update addr","mode":"1","requestType":"2","dbAlias":"primary.accounts","x":1170,"y":200,"wires":[["fd565cdc.5b9e"]]},{"id":"cfe70bd2.1b0638","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":770,"y":1260,"wires":[]},{"id":"568b5627.690888","type":"function","z":"2c9dd332.05334c","name":"transform","func":"\nlet factories = global.get(\"factories\"); \nlet error = msg.error.message;\ntry {\n    error = JSON.parse(error);\n}catch(e){}\n\nmsg.payload = error && error.code === 11000 ? \nfactories.messages.address.existAddress :\nfactories.messages.generic.fail;\n\nif (msg.statusCode == '401' || msg.statusCode == '400')\n   msg.payload = factories.messages.generic.failAuth;\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":1280,"wires":[["fee41eb3.787da"]]},{"id":"fee41eb3.787da","type":"switch","z":"2c9dd332.05334c","name":"","property":"amqpMessage","propertyType":"msg","rules":[{"t":"null"},{"t":"nnull"}],"checkall":"true","outputs":2,"x":550,"y":1280,"wires":[["cfe70bd2.1b0638"],["9d44ee1d.e443","2741509c.e882c"]]},{"id":"9d44ee1d.e443","type":"async-function","z":"2c9dd332.05334c","name":"","func":"if(msg.error.message.includes('CONNECTION ERROR')){\n    await Promise.delay(5000);\n    await msg.amqpMessage.nackMsg();\n}else{\n    await msg.amqpMessage.ackMsg();\n}\n    \nmsg.payload = typeof msg.error.message;    \n    \nreturn msg;","outputs":1,"noerr":6,"x":770,"y":1320,"wires":[[]]},{"id":"2741509c.e882c","type":"debug","z":"2c9dd332.05334c","name":"","active":true,"console":"false","complete":"error","x":779.0729522705078,"y":1365.895881652832,"wires":[]},{"id":"f6068a59.a626f8","type":"function","z":"2c9dd332.05334c","name":"prepare request","func":"const prefix = global.get('settings.mongo.collectionPrefix');\nconst _ = global.get('_');\nconst network = global.get('node.network');\n\nconst addressForms = network.getAllAddressForms(msg.req.params.addr);\n\nmsg.payload ={ \n    model: `${prefix}Coin`, \n    request: {\n        address: {$in: Object.values(addressForms)},\n        inputBlock: null\n   },\n   options: {\n      sort: {outputBlock: -1},\n      limit: parseInt(msg.req.query.limit) || 100,\n      skip: parseInt(msg.req.query.skip) || 0\n   }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":1020,"wires":[["632e3db3.5e84a4"]]},{"id":"632e3db3.5e84a4","type":"mongo","z":"2c9dd332.05334c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":570,"y":1020,"wires":[["47ba8bca.296834"]]},{"id":"ba1b2434.4edcd8","type":"function","z":"2c9dd332.05334c","name":"transform output","func":"const _ = global.get('_');\n\n\n\nmsg.payload = msg.coins.map(coin => {\n      return ({\n        txid: _.chain(msg.payload)\n            .find({blockNumber: coin.outputBlock, index: coin.outputTxIndex})\n            .get('_id')\n            .value(),\n        address: coin.address,\n        amount: coin.value / Math.pow(10, 8),\n        satoshis: coin.value,\n        height: coin.outputBlock,\n        vout: coin.outputIndex\n      });\n    });\n\nreturn msg;","outputs":1,"noerr":0,"x":1020,"y":1020,"wires":[["4e47577b.ea57f8"]]},{"id":"56b47c8c.da26b4","type":"function","z":"2c9dd332.05334c","name":"prepare request","func":"const genericMessages = global.get('factories').messages.generic;\nconst prefix = global.get('settings.mongo.accountPrefix');\nconst network = global.get('node.network');\n\n\nif (!msg.payload.address) {\n     throw new Error(genericMessages.notEnoughArgs);\n  }\n\nmsg.address = msg.payload.address;\n\nconst addressForms = network.getAllAddressForms(msg.address);\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: {\n       address: {$in: Object.values(addressForms)}\n        \n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":500,"y":160,"wires":[["f3143a22.22bf08"]]},{"id":"8618c9a.7189a38","type":"debug","z":"2c9dd332.05334c","name":"","active":true,"console":"false","complete":"error","x":355.0798797607422,"y":1180.895851135254,"wires":[]},{"id":"47ba8bca.296834","type":"function","z":"2c9dd332.05334c","name":"","func":"const prefix = global.get('settings.mongo.collectionPrefix');\nconst _ = global.get('_');\n\n\nmsg.coins = msg.payload;\n\nmsg.payload ={ \n    model: `${prefix}Tx`, \n    request: {$or: \n    msg.coins.map(coin=>({\n        blockNumber: coin.outputBlock,\n        index: coin.outputTxIndex\n    }))\n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1020,"wires":[["ba1bb3ff.39969"]]},{"id":"ba1bb3ff.39969","type":"mongo","z":"2c9dd332.05334c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":810,"y":1020,"wires":[["ba1b2434.4edcd8"]]},{"id":"98d385f9.3dc368","type":"amqp out","z":"2c9dd332.05334c","name":"internal","topic":"${config.rabbit.serviceName}_user.created","iotype":"3","ioname":"internal","server":"","servermode":"1","x":1580,"y":120,"wires":[]},{"id":"f3143a22.22bf08","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo find addr","mode":"1","requestType":"0","dbAlias":"primary.accounts","x":680,"y":160,"wires":[["3a75c745.1ce4d8"]]},{"id":"3a75c745.1ce4d8","type":"switch","z":"2c9dd332.05334c","name":"","property":"payload.length","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"neq","v":"0","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":830,"y":160,"wires":[["2957c682.36865a"],["b224dbf1.a256c8"]]},{"id":"2957c682.36865a","type":"function","z":"2c9dd332.05334c","name":"transform","func":"const prefix = global.get('settings.mongo.accountPrefix');\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: {address: msg.address}\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":120,"wires":[["352fd4a8.2620ac"]]},{"id":"c6c5bb3b.8ee868","type":"http in","z":"2c9dd332.05334c","name":"create addr","url":"/addr","method":"post","upload":false,"swaggerDoc":"","x":110,"y":40,"wires":[["e77bfe4c.a3eb9"]]},{"id":"e77bfe4c.a3eb9","type":"function","z":"2c9dd332.05334c","name":"","func":"\nmsg.payload = JSON.stringify(msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":260,"y":40,"wires":[["19426b13.494545","ce81c134.93483"]]},{"id":"ce81c134.93483","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","headers":{},"x":410,"y":20,"wires":[]},{"id":"19426b13.494545","type":"amqp out","z":"2c9dd332.05334c","name":"address_created","topic":"${config.rabbit.serviceName}.account.create","configname":"","iotype":"3","ioname":"events","server":"","servermode":"1","x":450,"y":60,"wires":[]},{"id":"b58884bf.f35948","type":"amqp in","z":"2c9dd332.05334c","name":"create_from_laborx","topic":"address.created","configname":"laborx","iotype":"1","ioname":"profiles","noack":"0","durablequeue":"1","durableexchange":"1","server":"","servermode":"1","x":110,"y":140,"wires":[["a3f0eb02.448648"]]},{"id":"a3f0eb02.448648","type":"laborx_get_addr","z":"2c9dd332.05334c","addr":"bitcoin-address","name":"laborx_get_addr","x":300,"y":140,"wires":[["56b47c8c.da26b4"]]},{"id":"1866a8f9.6d2277","type":"amqp in","z":"2c9dd332.05334c","name":"delete_from_laborx","topic":"address.deleted","configname":"laborx","iotype":"1","ioname":"profiles","noack":"0","durablequeue":"1","durableexchange":"1","server":"","servermode":"1","x":120,"y":620,"wires":[["8898eb1d.2ccaf8"]]},{"id":"8898eb1d.2ccaf8","type":"laborx_get_addr","z":"2c9dd332.05334c","addr":"bitcoin-address","name":"laborx_get_addr","x":360,"y":620,"wires":[["316484c0.63001c"]]},{"id":"64c0a502.75037c","type":"laborx_auth","z":"2c9dd332.05334c","name":"laborx_auth","configprovider":"1","dbAlias":"accounts","providerpath":"http://localhost:3001","x":210,"y":920,"wires":[["6731d0f7.68fb4"]]},{"id":"61c7d36e.5e99cc","type":"laborx_auth","z":"2c9dd332.05334c","name":"laborx_auth","configprovider":"1","dbAlias":"accounts","providerpath":"http://localhost:3001","x":210,"y":1020,"wires":[["f6068a59.a626f8"]]}]}
  }, {upsert: true}, done);
};

module.exports.down = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.remove({"path":"2c9dd332.05334c","type":"flows"}, done);
};
