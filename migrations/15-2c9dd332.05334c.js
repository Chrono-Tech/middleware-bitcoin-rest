
module.exports.id = '15.2c9dd332.05334c';

const _ = require('lodash'),
  config = require('../config');

/**
 * @description flow 2c9dd332.05334c update
 * @param done
 */
   

module.exports.up = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.update({"path":"2c9dd332.05334c","type":"flows"}, {
    $set: {"path":"2c9dd332.05334c","body":[{"id":"5a35929d.0a716c","type":"http in","z":"2c9dd332.05334c","name":"create addr","url":"/addr","method":"post","upload":false,"swaggerDoc":"","x":130,"y":160,"wires":[["246933e5.62d28c"]]},{"id":"e4822e75.693fd","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":2010,"y":154,"wires":[]},{"id":"65927d71.4e8c44","type":"http in","z":"2c9dd332.05334c","name":"remove addr","url":"/addr","method":"delete","upload":false,"swaggerDoc":"","x":250,"y":500,"wires":[["316484c0.63001c"]]},{"id":"d0426981.27e8a8","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":1190,"y":500,"wires":[]},{"id":"7c68e0a0.c140d","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo","mode":"1","requestType":"2","dbAlias":"primary.accounts","x":650,"y":500,"wires":[["d7c0637b.46c32"]]},{"id":"cdd0bdcd.24b59","type":"function","z":"2c9dd332.05334c","name":"transform output","func":"\nlet factories = global.get(\"factories\"); \n\nif(msg.payload.error){\n    msg.payload = factories.messages.generic.fail;\n    return msg;\n}\n    \n    \nmsg.payload = factories.messages.generic.success;\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":500,"wires":[["d0426981.27e8a8"]]},{"id":"316484c0.63001c","type":"function","z":"2c9dd332.05334c","name":"transform params","func":"const prefix = global.get('settings.mongo.accountPrefix');\n\nmsg.address = msg.payload.address;\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: [{\n       address: msg.address\n   }, {isActive: false}]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":500,"wires":[["7c68e0a0.c140d"]]},{"id":"468de3dc.eb162c","type":"http in","z":"2c9dd332.05334c","name":"balance","url":"/addr/:addr/balance","method":"get","upload":false,"swaggerDoc":"","x":90,"y":760,"wires":[["6731d0f7.68fb4"]]},{"id":"6731d0f7.68fb4","type":"function","z":"2c9dd332.05334c","name":"transform params","func":"const prefix = global.get('settings.mongo.accountPrefix');\n\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: {\n       address: msg.req.params.addr\n   }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":760,"wires":[["a66b89d5.08b868"]]},{"id":"a66b89d5.08b868","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.accounts","x":482.50000381469795,"y":761.24999904632,"wires":[["36a27ede.06cd52"]]},{"id":"36a27ede.06cd52","type":"function","z":"2c9dd332.05334c","name":"transform output","func":"\nconst _ = global.get('_');\n\nlet account = msg.payload[0];\n\n\nmsg.payload = {\n    confirmations0: {\n      satoshis: _.get(account, 'balances.confirmations0', 0),\n      amount: _.get(account, 'balances.confirmations0', 0) / 100000000\n    },\n    confirmations3: {\n      satoshis: _.get(account, 'balances.confirmations3', 0),\n      amount: _.get(account, 'balances.confirmations3', 0) / 100000000\n    },\n    confirmations6: {\n      satoshis: _.get(account, 'balances.confirmations6', 0),\n      amount: _.get(account, 'balances.confirmations6', 0) / 100000000\n    },\n  };\n\n\nreturn msg;","outputs":1,"noerr":0,"x":676.250007629395,"y":761.24999904632,"wires":[["6e227f25.b210e"]]},{"id":"6e227f25.b210e","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":911.250007629395,"y":759.99999904632,"wires":[]},{"id":"e859d127.685df","type":"catch","z":"2c9dd332.05334c","name":"","scope":["9d44ee1d.e443","468de3dc.eb162c","8346fba1.12d028","34507ad0.0ff866","5a35929d.0a716c","5e8d6a6f.829244","3e6b7494.a8201c","c1a99120.e1907","d430cfb9.80173","54f1c0e7.3a5a7","fd565cdc.5b9e","c1017ee9.20a23","2897ae84.380082","b06bab45.8c4e48","2be633a7.9859fc","f597c720.2602e8","f0edc237.50ca1","cfe70bd2.1b0638","6e227f25.b210e","e4822e75.693fd","4e47577b.ea57f8","d0426981.27e8a8","4945e333.41fc8c","7c68e0a0.c140d","a66b89d5.08b868","21088134.04adae","f0afeaab.4cf7e8","2741509c.e882c","fb8909f1.457008","65927d71.4e8c44","66707387.71cc7c","c0de808e.fca52","d7c0637b.46c32","fee41eb3.787da","3c61534d.fb608c","568b5627.690888","b224dbf1.a256c8","36a27ede.06cd52","2a6a8ea2.44a9e2","cdd0bdcd.24b59","6731d0f7.68fb4","316484c0.63001c","dd761548.26d778","a315811b.0503e","375e54b9.33dc5c"],"x":180,"y":1280,"wires":[["568b5627.690888","2741509c.e882c"]]},{"id":"4e47577b.ea57f8","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":1010,"y":860,"wires":[]},{"id":"375e54b9.33dc5c","type":"http in","z":"2c9dd332.05334c","name":"utxo","url":"/addr/:addr/utxo","method":"get","upload":false,"swaggerDoc":"","x":90,"y":860,"wires":[["2be633a7.9859fc"]]},{"id":"4945e333.41fc8c","type":"join","z":"2c9dd332.05334c","name":"","mode":"auto","build":"merged","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","x":670,"y":860,"wires":[["2897ae84.380082"]]},{"id":"2897ae84.380082","type":"function","z":"2c9dd332.05334c","name":"","func":"const _ = global.get('_');\n\nlet height = msg.payload[0];\nlet rawCoins = msg.payload[1];\n\n\n\n  msg.payload =  _.chain(rawCoins)\n    .filter(c => c.height > -1)\n    .map(rawCoin => {\n      return ({\n        address: rawCoin.address,\n        txid: rawCoin.hash,\n        scriptPubKey: rawCoin.script,\n        amount: rawCoin.value / Math.pow(10, 8),\n        satoshis: rawCoin.value,\n        height: rawCoin.height,\n        vout: rawCoin.index,\n        confirmations: height - rawCoin.height + 1\n      });\n    })\n    .orderBy('height', 'desc')\n    .value();\n\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":860,"wires":[["4e47577b.ea57f8"]]},{"id":"8346fba1.12d028","type":"bcoin","z":"2c9dd332.05334c","mode":"1","method":"","params":[],"name":"bcoin","x":530,"y":860,"wires":[["4945e333.41fc8c"]]},{"id":"2be633a7.9859fc","type":"function","z":"2c9dd332.05334c","name":"","func":"\nmsg.req.address = msg.payload.address\n\nmsg.payload = [{\n    method: 'getblockcount', \n    params: []\n}, {\n    method: 'getcoinsbyaddress',\n    params: [msg.req.params.addr]\n}];\n\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":860,"wires":[["66707387.71cc7c"]]},{"id":"66707387.71cc7c","type":"split","z":"2c9dd332.05334c","name":"","splt":"\\n","spltType":"str","arraySplt":"1","arraySpltType":"len","stream":false,"addname":"","x":390,"y":860,"wires":[["8346fba1.12d028"]]},{"id":"352fd4a8.2620ac","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo create addr","mode":"1","requestType":"1","dbAlias":"primary.accounts","x":1450,"y":160,"wires":[["3c61534d.fb608c"]]},{"id":"2a6a8ea2.44a9e2","type":"function","z":"2c9dd332.05334c","name":"transform output","func":"\nlet factories = global.get(\"factories\"); \n\nif(msg.payload.error){\n    msg.payload = factories.messages.generic.fail;\n    return msg;\n}\n    \n    \nmsg.payload = factories.messages.generic.success;\nreturn msg;","outputs":1,"noerr":0,"x":1840,"y":154,"wires":[["e4822e75.693fd"]]},{"id":"fb8909f1.457008","type":"amqp in","z":"2c9dd332.05334c","name":"post addresses","topic":"${config.rabbit.serviceName}.account.create","iotype":"3","ioname":"events","noack":"0","durablequeue":"1","durableexchange":"0","server":"","servermode":"1","x":80,"y":260,"wires":[["f0edc237.50ca1"]]},{"id":"f0edc237.50ca1","type":"function","z":"2c9dd332.05334c","name":"","func":"\nmsg.payload = JSON.parse(msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":260,"wires":[["34507ad0.0ff866"]]},{"id":"d430cfb9.80173","type":"amqp out","z":"2c9dd332.05334c","name":"","topic":"${config.rabbit.serviceName}.account.created","iotype":"3","ioname":"events","server":"","servermode":"1","x":1970,"y":240,"wires":[]},{"id":"3c61534d.fb608c","type":"switch","z":"2c9dd332.05334c","name":"","property":"amqpMessage","propertyType":"msg","rules":[{"t":"null"},{"t":"nnull"}],"checkall":"true","outputs":2,"x":1630,"y":160,"wires":[["2a6a8ea2.44a9e2"],["fd565cdc.5b9e"]]},{"id":"fd565cdc.5b9e","type":"function","z":"2c9dd332.05334c","name":"","func":"\nif(msg.amqpMessage)\n    msg.amqpMessage.ackMsg();\n\nmsg.payload = JSON.stringify({address: msg.address})\n\nreturn msg;","outputs":1,"noerr":0,"x":1810,"y":240,"wires":[["d430cfb9.80173"]]},{"id":"5e8d6a6f.829244","type":"amqp in","z":"2c9dd332.05334c","name":"delete addresses","topic":"${config.rabbit.serviceName}.account.delete","iotype":"3","ioname":"events","noack":"0","durablequeue":"1","durableexchange":"0","server":"","servermode":"1","x":80,"y":600,"wires":[["c1017ee9.20a23"]]},{"id":"c1017ee9.20a23","type":"function","z":"2c9dd332.05334c","name":"","func":"\nmsg.payload = JSON.parse(msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":600,"wires":[["316484c0.63001c"]]},{"id":"c1a99120.e1907","type":"amqp out","z":"2c9dd332.05334c","name":"","topic":"${config.rabbit.serviceName}.account.deleted","iotype":"3","ioname":"events","server":"","servermode":"1","x":1050,"y":580,"wires":[]},{"id":"54f1c0e7.3a5a7","type":"function","z":"2c9dd332.05334c","name":"","func":"\nif(msg.amqpMessage)\n    msg.amqpMessage.ackMsg();\n\nmsg.payload = JSON.stringify({address: msg.address})\n\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":580,"wires":[["c1a99120.e1907"]]},{"id":"d7c0637b.46c32","type":"switch","z":"2c9dd332.05334c","name":"","property":"amqpMessage","propertyType":"msg","rules":[{"t":"null"},{"t":"nnull"}],"checkall":"true","outputs":2,"x":790,"y":500,"wires":[["cdd0bdcd.24b59"],["54f1c0e7.3a5a7"]]},{"id":"b224dbf1.a256c8","type":"function","z":"2c9dd332.05334c","name":"transform","func":"const prefix = global.get('settings.mongo.accountPrefix');\nconst factories = global.get(\"factories\"); \nlet error = msg.error.message;\n\ntry {\n    error = JSON.parse(error);\n}catch(e){}\n\nif(error.code !== 11000)\nthrow new Error(msg.error.message);\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: [\n        {address: msg.payload.request.address}, \n        {$set:{ \n            isActive: true\n        }}\n        ]\n   \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1460,"y":80,"wires":[["21088134.04adae"]]},{"id":"21088134.04adae","type":"mongo","z":"2c9dd332.05334c","model":"EthAccount","request":"{}","options":"","name":"mongo","mode":"1","requestType":"2","dbAlias":"primary.accounts","x":1630,"y":80,"wires":[["3c61534d.fb608c"]]},{"id":"1f3f3c62.d10644","type":"catch","z":"2c9dd332.05334c","name":"","scope":["352fd4a8.2620ac"],"x":1280,"y":80,"wires":[["b224dbf1.a256c8"]]},{"id":"cfe70bd2.1b0638","type":"http response","z":"2c9dd332.05334c","name":"","statusCode":"","x":770,"y":1260,"wires":[]},{"id":"568b5627.690888","type":"function","z":"2c9dd332.05334c","name":"transform","func":"\nlet factories = global.get(\"factories\"); \nlet error = msg.error.message;\ntry {\n    error = JSON.parse(error);\n}catch(e){}\n\nmsg.payload = error && error.code === 11000 ? \nfactories.messages.address.existAddress :\nfactories.messages.generic.fail;\n   \nreturn msg;","outputs":1,"noerr":0,"x":380,"y":1280,"wires":[["fee41eb3.787da"]]},{"id":"fee41eb3.787da","type":"switch","z":"2c9dd332.05334c","name":"","property":"amqpMessage","propertyType":"msg","rules":[{"t":"null"},{"t":"nnull"}],"checkall":"true","outputs":2,"x":550,"y":1280,"wires":[["cfe70bd2.1b0638"],["9d44ee1d.e443"]]},{"id":"9d44ee1d.e443","type":"async-function","z":"2c9dd332.05334c","name":"","func":"if(msg.error.message.includes('CONNECTION ERROR')){\n    await Promise.delay(5000);\n    await msg.amqpMessage.nackMsg();\n}else{\n    await msg.amqpMessage.ackMsg();\n}\n    \nmsg.payload = typeof msg.error.message;    \n    \nreturn msg;","outputs":1,"noerr":6,"x":770,"y":1320,"wires":[[]]},{"id":"2741509c.e882c","type":"debug","z":"2c9dd332.05334c","name":"","active":true,"console":"false","complete":"error","x":779.0729522705078,"y":1365.895881652832,"wires":[]},{"id":"4143d67a.7c90f8","type":"mongo","z":"2c9dd332.05334c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"4","dbAlias":"primary.data","x":930,"y":160,"wires":[["fc0656b2.396258"]]},{"id":"34507ad0.0ff866","type":"async-function","z":"2c9dd332.05334c","name":"build balance query","func":"const _ = global.get('_');\nconst genericMessages = global.get('factories').messages.generic;\nconst rpc = global.get('rpc');\nconst prefix = global.get('settings.mongo.collectionPrefix');\n\nconst maxBlock = _.get(msg.payload, '0.number', 0);\n\nlet requestBalanceUnconfirmed = [\n{$match: {\n    $or: [\n    {'txs.outputs.address': msg.address},\n    {'txs.inputs.address': msg.address}    \n    ],\n    number: -1\n    }},\n{$unwind: '$txs'},\n{$unwind: '$txs.outputs'},\n{$unwind: '$txs.inputs'},\n{$match: {\n    $or: [\n        {'txs.outputs.address': msg.address},\n        {'txs.inputs.address': msg.address}    \n    ]\n    \n    }},\n    {$group: {_id: null, outputs: {$addToSet: '$txs.outputs'}, inputs: {$addToSet: '$txs.inputs'}, txs: {$addToSet: '$txs.hash'}}},\n     {$project: {\n         txs: '$txs',\n         input: {\n             $reduce: {\n                    input: '$inputs',\n                    initialValue: 0,\n                    in: {$add: ['$$value', {$cond: {\n                            if: {$eq: ['$$this.address', msg.address]}, \n                            then: '$$this.value', \n                            else: 0\n                                \n                            }}\n                        ]}\n                 }\n             \n             },\n             output: {\n             $reduce: {\n                    input: '$outputs',\n                    initialValue: 0,\n                    in: {$add: ['$$value', {$cond: {\n                            if: {$eq: ['$$this.address', msg.address]}, \n                            then: '$$this.value', \n                            else: 0\n                                \n                            }}\n                        ]}\n                 }\n             \n             }\n         }},\n         {$project: {\n             txs: '$txs',\n             delta: {$subtract: ['$output', '$input']}             \n             }}\n];\n\nlet requestBalance0 = [\n    {$match: {\n    'txs.outputs.address': msg.address,\n    'txs.outputs.spent': false,\n    number: {$gt: -1, $lte: maxBlock}\n    }},\n{$unwind: '$txs'},\n{$unwind: '$txs.outputs'},\n{$match: {\n    'txs.outputs.address': msg.address,\n    'txs.outputs.spent': false\n    }},\n{$group: {_id: null, outputs0: {$sum: '$txs.outputs.value'},  number: {$max: '$number'}}}\n    ];\n\nlet requestBalance3 = _.clone(requestBalance0);\nrequestBalance3[0] = {$match: {\n    'txs.outputs.address': msg.address,\n    'txs.outputs.spent': false,\n    number: {$gt: -1, $lte: maxBlock - 3}\n    }};\nrequestBalance3[4] = {$group: {_id: null, outputs3: {$sum: '$txs.outputs.value'}}};\n\nlet requestBalance6 = _.clone(requestBalance3);\nrequestBalance6[0] = {$match: {\n    'txs.outputs.address': msg.address,\n    'txs.outputs.spent': false,\n    number: {$gt: -1, $lte: maxBlock - 6}\n    }};\nrequestBalance6[4] = {$group: {_id: null, outputs6: {$sum: '$txs.outputs.value'}}};\n\nmsg.payload = [{\n    model: `${prefix}Block`, \n    request: requestBalance0    \n},\n{\n    model: `${prefix}Block`, \n    request: requestBalance3    \n},\n{\n    model: `${prefix}Block`, \n    request: requestBalance6    \n},\n{\n    model: `${prefix}Block`, \n    request: requestBalanceUnconfirmed     \n}];\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":590,"y":160,"wires":[["aff90034.15b3c"]]},{"id":"aff90034.15b3c","type":"split","z":"2c9dd332.05334c","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":773,"y":161,"wires":[["4143d67a.7c90f8"]]},{"id":"fc0656b2.396258","type":"join","z":"2c9dd332.05334c","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","x":1090,"y":160,"wires":[["ccf03688.cfc238"]]},{"id":"ccf03688.cfc238","type":"function","z":"2c9dd332.05334c","name":"transform","func":"const prefix = global.get('settings.mongo.accountPrefix');\nconst factories = global.get(\"factories\"); \nconst _ = global.get('_');\n\n\nconst data = _.chain(msg.payload)\n.transform((result, item)=>{\n    _.merge(result, _.get(item, '0', {}));\n}, {})\n.value();\n\n\nmsg.payload = {\n    model: `${prefix}Account`, \n    request: {\n            address: msg.address,\n            balances: {\n                confirmations0: _.get(data, 'outputs0', 0) + _.get(data, 'delta', 0),\n                confirmations3: _.get(data, 'outputs3', 0),\n                confirmations6: _.get(data, 'outputs6', 0)\n                \n            },\n            lastBlockCheck: _.get(data, 'number', 0),\n            lastTxs: _.get(data, 'txs', [])\n        }\n        \n   \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1260,"y":160,"wires":[["352fd4a8.2620ac","152adc65.8824e4"]]},{"id":"246933e5.62d28c","type":"async-function","z":"2c9dd332.05334c","name":"build balance query","func":"const _ = global.get('_');\nconst genericMessages = global.get('factories').messages.generic;\nconst rpc = global.get('rpc');\nconst prefix = global.get('settings.mongo.collectionPrefix');\n\n\nif (!msg.payload.address) {\n     throw new Error(genericMessages.notEnoughArgs);\n  }\n  \nmsg.address = msg.req.body.address;  \n\n\nlet requestBalanceUnconfirmed = \n\nmsg.payload = {\n    model: `${prefix}Block`, \n    request: {},\n    options: {\n        limit: 1,\n        sort: {number: -1}\n    }\n};\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":160,"wires":[["98220567.a29718"]]},{"id":"98220567.a29718","type":"mongo","z":"2c9dd332.05334c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":470,"y":100,"wires":[["34507ad0.0ff866"]]},{"id":"152adc65.8824e4","type":"debug","z":"2c9dd332.05334c","name":"","active":true,"console":"false","complete":"false","x":1590,"y":400,"wires":[]}]}
  }, {upsert: true}, done);
};

module.exports.down = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.remove({"path":"2c9dd332.05334c","type":"flows"}, done);
};
